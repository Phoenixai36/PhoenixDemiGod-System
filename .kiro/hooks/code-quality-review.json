{
    "name": "Code Quality Review Hook",
    "description": "Analyzes source code changes for potential improvements, code smells, design patterns, and best practices while maintaining existing functionality",
    "version": "1.0.0",
    "enabled": true,
    "triggers": [
        {
            "type": "file_change",
            "patterns": [
                "src/**/*.py",
                "src/**/*.js",
                "src/**/*.ts",
                "infra/**/*.tf",
                "configs/**/*.yaml",
                "configs/**/*.yml",
                "scripts/**/*.sh",
                "scripts/**/*.ps1"
            ],
            "exclude_patterns": [
                "**/__pycache__/**",
                "**/node_modules/**",
                "**/.git/**",
                "**/build/**",
                "**/dist/**",
                "**/*.pyc",
                "**/*.log",
                "**/venv/**",
                "**/.venv/**"
            ],
            "debounce_ms": 500,
            "events": [
                "created",
                "modified"
            ]
        }
    ],
    "actions": [
        {
            "name": "analyze_code_quality",
            "type": "ai_request",
            "prompt": "Analyze the following code file for potential improvements while maintaining existing functionality:\n\nFile: {{file_path}}\nLanguage: {{file_extension}}\nChange Type: {{change_type}}\n\nCode:\n```{{file_extension}}\n{{file_content}}\n```\n\nPlease provide:\n1. Code smells and anti-patterns detected\n2. Design pattern opportunities\n3. Performance optimization suggestions\n4. Readability improvements\n5. Maintainability enhancements\n6. Security considerations\n\nFocus on practical, actionable suggestions that preserve functionality.",
            "parameters": {
                "max_tokens": 2000,
                "temperature": 0.3
            }
        },
        {
            "name": "generate_improvement_report",
            "type": "file_write",
            "path": "reports/code-quality/{{timestamp}}-{{file_name}}-analysis.md",
            "template": "# Code Quality Analysis Report\n\n**File:** {{file_path}}  \n**Analyzed:** {{timestamp}}  \n**Change Type:** {{change_type}}  \n**Language:** {{file_extension}}\n\n## Analysis Results\n\n{{ai_analysis_result}}\n\n## Metrics\n- **File Size:** {{file_size}} bytes\n- **Line Count:** {{line_count}}\n- **Estimated Complexity:** {{complexity_score}}\n\n## Recommendations Priority\n- **High:** Critical issues affecting security or performance\n- **Medium:** Code smells and maintainability concerns  \n- **Low:** Style and readability improvements\n\n---\n*Generated by Phoenix Hydra Code Quality Hook*"
        }
    ],
    "filters": {
        "min_file_size": 50,
        "max_file_size": 1048576,
        "ignore_binary": true,
        "supported_languages": [
            "python",
            "javascript",
            "typescript",
            "terraform",
            "yaml",
            "shell",
            "powershell"
        ]
    },
    "settings": {
        "analysis_depth": "comprehensive",
        "include_performance_analysis": true,
        "include_security_analysis": true,
        "include_design_patterns": true,
        "generate_diff_suggestions": false,
        "notification_level": "medium",
        "quality_thresholds": {
            "complexity_warning": 10,
            "complexity_critical": 20,
            "line_length_warning": 100,
            "function_length_warning": 50,
            "file_size_warning": 500000
        },
        "focus_areas": [
            "code_smells",
            "design_patterns",
            "performance_optimization",
            "readability",
            "maintainability",
            "security_issues",
            "best_practices"
        ]
    },
    "integrations": {
        "vscode": {
            "show_notifications": true,
            "create_problems_entries": false,
            "highlight_suggestions": false
        },
        "git": {
            "analyze_on_commit": false,
            "pre_commit_hook": false
        },
        "reporting": {
            "create_summary_reports": true,
            "report_directory": "reports/code-quality",
            "retention_days": 30
        }
    }
}